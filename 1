#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

// ตั้งค่า Wi-Fi
const char* ssid = "ชื่อ Wi-Fi ของคุณ";  // ชื่อ Wi-Fi
const char* password = "รหัสผ่าน Wi-Fi ของคุณ";  // รหัสผ่าน Wi-Fi

// กำหนดพอร์ตของ Web Server
ESP8266WebServer server(80);

// กำหนด LED pin
const int ledPin = 2;  // GPIO2 (D4) บน ESP8266

void setup() {
  // เริ่มต้น Serial communication
  Serial.begin(115200);

  // กำหนด LED Pin เป็น OUTPUT
  pinMode(ledPin, OUTPUT);

  // เชื่อมต่อ Wi-Fi
  WiFi.begin(ssid, password);

  // รอจนกว่าเชื่อมต่อ Wi-Fi เสร็จ
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("กำลังเชื่อมต่อ Wi-Fi...");
  }

  // เมื่อเชื่อมต่อเสร็จ
  Serial.println("เชื่อมต่อ Wi-Fi สำเร็จ!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());  // แสดง IP Address ของ ESP8266

  // กำหนด Route ของ Web Server
  server.on("/", HTTP_GET, []() {
    String html = "<html><body><h1>LED Control</h1>";
    html += "<p><a href=\"/on\"><button>เปิด LED</button></a></p>";
    html += "<p><a href=\"/off\"><button>ปิด LED</button></a></p>";
    html += "</body></html>";
    server.send(200, "text/html", html);  // ส่ง HTML ไปยังเว็บเบราว์เซอร์
  });

  // Route สำหรับเปิด LED
  server.on("/on", HTTP_GET, []() {
    digitalWrite(ledPin, HIGH);  // เปิด LED
    server.send(200, "text/html", "<h1>LED เปิดแล้ว</h1><a href=\"/\">กลับไปที่หน้าแรก</a>");
  });

  // Route สำหรับปิด LED
  server.on("/off", HTTP_GET, []() {
    digitalWrite(ledPin, LOW);  // ปิด LED
    server.send(200, "text/html", "<h1>LED ปิดแล้ว</h1><a href=\"/\">กลับไปที่หน้าแรก</a>");
  });

  // เริ่ม Web Server
  server.begin();
}

void loop() {
  server.handleClient();  // รับคำขอจากลูกค้าและตอบกลับ
}
